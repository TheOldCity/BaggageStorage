@inject IViewLocalizer Localizer

@{
    Layout = null;

    var controllerName = this.ViewContext.RouteData.Values["controller"].ToString();
    var actionName = this.ViewContext.RouteData.Values["action"].ToString();
    var viewFileName = String.Format("/View/{0}/{1}.cshtml", controllerName, actionName);
    var storageKey = "storage_operations_grid";
    var title = Localizer["Сгруппированный список операций"].Value;
}

<script>
    var operation = {
        dxDataGrid: undefined,

        grid_refresh: function(){
            operation.dxDataGrid.refresh();
        },

        closePortlet: function () {
            $("#portlet_operation").remove();
            $("#tab-opened-portlet-operation").remove();
            $(".a-tab-opened-portlet:first").click();
        },
    };
</script>

<div class="portlet light portlet-fit full-height-content full-height-content-scrollable height-as-parent">
    <div class="portlet-title custom-title" style="margin-bottom:0px;">
        <div class="caption">
            <i class=" icon-layers font-green portlet-header-icon"></i>
            <span class="caption-subject font-main-color bold uppercase">@title</span>
        </div>

        <div class="actions">
            <a class="btn btn-circle btn-icon-only btn-default" href="javascript:operation.grid_refresh();">
                <i class="icon-refresh"></i>
            </a>
            <a class="btn btn-circle btn-icon-only btn-default fullscreen" href="javascript:;" data-original-title="" title=""> </a>
            <a class="btn btn-circle btn-icon-only btn-default" href="javascript:operation.closePortlet();">
                <i class="dx-icon-close"></i>
            </a>
        </div>
    </div>

    <div class="portlet-body" style="margin-top:0px;height:auto;padding:5px;">
        <input type="hidden" id="operation-view-name" value="@viewFileName" />
        <input type="hidden" id="operation-storage-name" value='["@storageKey"]' />

        @(Html.DevExtreme().DataGrid()
                .ID("gridOperationsContainer")
                .Sorting(sorting => sorting.Mode(GridSortingMode.Multiple))
                .ShowBorders(true)
                .ShowRowLines(true)
                .Selection(s => s.Mode(SelectionMode.Single))
                .OnCellPrepared("table_cellPrepared")
                .AllowColumnReordering(true)
                .Grouping(grouping => grouping.AutoExpandAll(true))
                .SearchPanel(searchPanel => searchPanel.Visible(true))
                .GroupPanel(p => p.Visible(true).EmptyPanelText(Localizer["Панель группировки"].Value).AllowColumnDragging(true))
                .Export(e => e
                    .Enabled(true)
                    .FileName("Operations").AllowExportSelectedData(true))
                .HoverStateEnabled(true)
                .RowAlternationEnabled(true)
                .Paging(paging => paging.Enabled(true))
                .StateStoring(s => s
                    .Enabled(true)
                    .Type(StateStoringType.LocalStorage)
                    .StorageKey(storageKey)
                )
                .Pager(p => p
                    .ShowInfo(true)
                    .ShowNavigationButtons(true)
                    .ShowPageSizeSelector(true)
                    .AllowedPageSizes(new int[] { 25, 50, 100 })
                )
                .Editing(editing =>
                {
                    editing.AllowAdding(true);
                    editing.AllowDeleting(true);
                    editing.Mode(GridEditMode.Form);
                    editing.AllowUpdating(true);
                })

                .Columns(columns =>
                {
                    columns.Add()
                        .DataField("name")
                        .Caption(Localizer["Название операции"].Value);

                    columns.Add()
                        .DataField("enumName")
                        .Lookup(lookup => lookup
                            .DataSource(d => d.WebApi().RouteName("PermissionEnumsApi").LoadAction("Get").Key("id"))
                            .DisplayExpr("name")
                            .ValueExpr("id")
                        )
                        .Caption(Localizer["Enum значение"].Value);

                    columns.Add()
                        .DataField("operationTypeId").GroupIndex(0)
                        .Lookup(lookup => lookup
                            .DataSource(d => d.WebApi().RouteName("OperationTypeApi").Key("id")
                                .LoadAction("Get")
                                .DeleteAction("Delete")
                                .InsertAction("Post")
                                .UpdateAction("Put"))
                            .DisplayExpr("name")
                            .ValueExpr("id")
                        )
                        .Caption(Localizer["Группа операций"].Value);


                })

                .DataSource(ds => ds.WebApi().RouteName("OperationApi").Key("id")
                    .LoadAction("Get")
                    .DeleteAction("Delete")
                    .InsertAction("Post")
                    .UpdateAction("Put"))
        )
    </div>
</div>

<script>
    $(function () {
        operation.dxDataGrid = $("#gridOperationsContainer").dxDataGrid('instance');

        var a = $('#portlet_operation .dx-toolbar-after').detach();
        $(a).appendTo('#portlet_operation .portlet-title');

        $(window).resize(function () {
            operation.dxDataGrid.option("height", parseInt($("#portlet_operation .height-as-parent").css('min-height')) - 63);
        });
    });
</script>
